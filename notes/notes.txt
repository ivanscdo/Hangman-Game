pseudocode
create README (markup)
link to portfolio
commit often!
theme??
<86 IDEA1:history of web development? old browser graphics? /86>
IDEA2:web browsers, words to guess will be old and new browsers, style will change to match style of browser, first(nexus & mosaic) to recent (chrome, safari, firefox etc)

<86 trivia 
displayed after x time passed, or x guesses, perhaps mouse movement?
first browser: WorldWideWeb, later renamed Nexus; developed on NeXT computer (created by Steve Jobs after dismissal from Apple), etc. 
Find more bits of trivia! /86>


pseudocode
html/css
black screen (body)
title: Hangman
subtitle, with slanted styling?
two center columns
left column with picture
right column:
Press Any Key to get started!
Wins
Current Word along with spaces/underscores representing length of word
Number of Guesses Remaining, along with actual #
Letters Already Guessed, along with list of letters

js
page loads, game starts, user asked to press any key.

.addEventListener for keyup, runs game function, all game logic within these initial curly braces; this cannot register as a guess!

computer randomly chooses word from list of words, word length generated, guesses reset - 15?, letters already guessed reset - empty.

if/else for guesses.

if guesses match: letter appears (display none? no, simply write to div).

if guesses do no match: letter guessed appears in Letters Already Guessed, Number of Guesses decreases by 1.

if all guesses match, Congratulations message is shown, user is asked if they want to play again. 



randomly selected word:
draft1
list of words can be array or object?

computer randomly chooses number (some sort of math function from 3.2??) which corresponds to word, then using .length for Current Word.

randomly selected word pushed to "active array"? letters of word broken into indices? (PROBLEM!)



problem: how do I take the word, count the number of letters, and create a gameboard based on that count??

solution1: take .length, insert 1 underscore for the length, change gameboard div 



select random word from list
var computerChoice = wordList[Math.floor(Math.random() * wordList.length)];

length of randomly selected word (number) stored in variable
var gameboardLength = computerChoice.length

problem: how do I take that number and create a gameboard? ie create underscore for each letter?

solution1: for loop!



problem: how do I code different actions for multiple/concurrent key presses? ie first keypress starts game, second keypress counts as letter guess, etc

I need a way to differentiate between key presses!

solution1: wrapping with if/else? perhaps with a counter? failed

solution2: for loop? started but revisited if/else, this time using if/else inside of document.addEventListener - successful, but doesn't make sense to implement, seems like it would be way to lengthy, would need one if/else argument for EACH user key press, no way of knowing how many key presses the user will make... wait, user will make at least 16 key presses (1 to start + 15 guesses)

solution3: functions

solution4: timestamp? 

solution5: use start button



problem:how to handle guesses?

solution1:take randomly chosen word, break up each letter and add to array, then use .indexof to check if guess match anything in array

problem: how do I handle keypresses that match? how do I take a keypress that matched a letter in the randomly chosen word and add that to the Current Word div; on top of that, how do I add that letter to the right position in that set of underscores? ie keypress matched letter that corresponds to third underscore, how I replace that third underscore with the letter that was pressed?

solution1: take userGuess (key user pressed), look inside of computerChoice (computer's randomly chosen word), get index of that letter, then store value (int) in var.
var gameboardIndex = computerChoice.indexOf(userGuess);

problem: now I have the index, how do I change the correct underscore in the Current Word div?  I need to go into .gameboard with my index, and change the matching index in .gameboard div

solution1: couldn't I just recreate the entire div after each correct keypress? success!

problem: able to match keypress to change right underscore in Current Word div, however, it is recreating the div after each keypress, ie it deletes any previous keypresses and recreates with the current keypress. How do I get the previous keypresses to stick?

solution1:
